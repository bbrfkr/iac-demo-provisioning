---
- name: create instances
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
  - vars/vars.yaml
  tasks:
  - name: check existence of instances
    ec2_instance_facts:
      region: "{{ aws_region }}"
      filters:
        instance-state-name: running
        "tag:Name": "{{ item.tags.Name }}"
    register: reg_ec2_facts
    with_items: "{{ aws_instances }}"
  - name: check subnet id
    ec2_vpc_subnet_facts:
      region: "{{ aws_region }}"
      filters:
        "tag:Name": "{{ item.item.vpc_subnet }}"
    register: reg_subnet_id
    when: item.instances | length == 0
    with_items: "{{ reg_ec2_facts.results }}"
  - name: create instances
    ec2:
      region: "{{ aws_region }}"
      key_name: "{{ aws_keypair }}"
      instance_type: "{{ item.item.item.instance_type }}"
      image: "{{ aws_ami_id }}"
      group: "{{ item.item.item.security_group }}"
      vpc_subnet_id: "{{ item.subnets.0.id }}"
      volumes: "{{ item.item.item.volumes | default(omit) }}"
      instance_profile_name: "{{ item.item.item.iam_role | default(omit) }}"
      instance_tags: "{{ item.item.item.tags }}"
      zone: "{{ item.item.item.az }}"
      count_tag:
        Name: "{{ item.item.item.tags.Name }}"
      exact_count: 1
      assign_public_ip: "{{ item.item.item.assign_public_ip }}"
      wait: yes
    register: reg_create_instances
    async: 3600
    poll: 0
    when: item.item.instances | length == 0
    with_items: "{{ reg_subnet_id.results }}"
  - name: wait for instances creation to complete
    async_status:
      jid: "{{ item.ansible_job_id }}"
    register: ec2_jobs
    until: ec2_jobs.finished
    retries: 300
    when: item.item.item.instances | length == 0
    with_items: "{{ reg_create_instances.results }}"
  - name: check instance id of iac-jenkins instance
    ec2_instance_facts:
      region: "{{ aws_region }}"
      filters:
        instance-state-name: running
        "tag:Name": bbrfkr-instance-iac-jenkins
    register: reg_iac_jenkins
  - name: get record sets
    route53_facts:
      hosted_zone_id: "{{ aws_hosted_zone_id }}"
      query: record_sets
    register: reg_record_sets
  - name: set var for jenkins ip
    set_fact:
      jenkins_ip: "{{ item.ResourceRecords.0.Value }}"
    when: item.Name == "jenkins.bbrfkr.tk."
    with_items: "{{ reg_record_sets.ResourceRecordSets }}"
  - name: associate eip to iac-jenkins instance
    ec2_eip:
      region: "{{ aws_region }}"
      device_id: "{{ reg_iac_jenkins.instances.0.instance_id }}"
      public_ip: "{{ jenkins_ip }}"
    when: reg_iac_jenkins.instances != []
  - name: attach ebs volume to iac-jenkins instance
    ec2_vol:
      region: "{{ aws_region }}"
      name: bbrfkr-ebs-jenkins-home
      instance: "{{ reg_iac_jenkins.instances.0.instance_id }}"
      device_name: /dev/sdf
      delete_on_termination: no
